services:
  
  etl-app:
    build: .
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    env_file:
      - .env
    networks:
      - etl-network
    
  mongo:
    command: mongod --quiet
    image: mongo:7.0
    restart: always
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}    
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - etl-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]  
      interval: 20s
      timeout: 10s
      retries: 3      

  mongo-express:
    image: mongo-express:latest
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=${MONGO_PORT}
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USER}      
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD}  
      - ME_CONFIG_BASICAUTH_USERNAME=${WEB_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${WEB_PASSWORD}
      - ME_CONFIG_OPTIONS_EDITORTHEME=default
      - ME_CONFIG_SITE_BASEURL=/
      - ME_CONFIG_SITE_COOKIESECRET=somesecretkey
      - ME_CONFIG_SITE_SESSIONSECRET=anothersecretkey

    depends_on:
      etl-app:
        condition: service_completed_successfully
    networks:
      - etl-network

networks:
  etl-network:
    driver: bridge
volumes:
  mongo_data: